// ==========================================================
//  FORMS
// ==========================================================

//  Dependencies:
@use "../setting" as *;
@use "../main/themes" as *;
@use "../main/mixins" as *;
@use "sass:map";

// Form
@mixin form {
    display: inline-block;
    width: 100%;
    border: 1px solid var(--form-border-color);
    font-family: map.get($nexa-setting, font-form);
    color: var(--color-text, #000);
    background-color: var(--form-bg);
    outline: none;
    transition: map.get($nexa-transition, form);
    &:not(:disabled):hover {
        border-color: var(--form-border-color-hover);
    }
    &:not(:disabled):focus {
        border-color: color-mix(in srgb, var(--color-primary) 50%, transparent);
        box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary, #2563eb) 20%, transparent);
        outline: none;
    }
    &:disabled {
        background-color: var(--form-bg-disabled);
        user-select: none;
    }
}
@each $name, $props in $nexa-forms {
    $suffix: if($name == default, "", "-#{$name}");
    .form-input#{$suffix},
    .form-select#{$suffix},
    .form-textarea#{$suffix} {
        font-size: map.get($props, font-size);
        border-radius: map.get($props, border-radius);
        height: map.get($props, height);
        padding-inline: map.get($props, padding-inline);
        @include form;
    }
}
// Form-select
.form-select,
.form-select-sm,
.form-select-md,
.form-select-lg {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    position: relative;
    background-image: var(--form-select-icon);
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 16px 12px;
    &::-ms-expand {
        display: none;
    }
}
.form-label {
    display: inline-flex;
    gap: 2px;
    font-size: 0.9rem;
    margin-bottom: 5px;
    sup {
        color: var(--color-danger);
    }
}
.form-text {
    display: inline-flex;
    color: var(--form-text);
    font-size: 0.8rem;
    margin-top: 5px;
}

// Form textarea
.form-textarea {
    --textarea-border-radius: 15px;
    --textarea-padding: 10px 15px;
    --textarea-font-size: 0.9rem;
    --textarea-min-height: 90px;
    @include form;
    font-size: var(--textarea-font-size);
    padding: var(--textarea-padding);
    min-height: var(--textarea-min-height);
    border-radius: if(map.get($nexa-setting, rounded-elements) == true, var(--textarea-border-radius), 0);
    &:disabled {
        user-select: none;
        resize: none;
    }
}

// Form checkbox
.form-check {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    &-label {
        font-size: 0.95rem;
        color: #111;
        cursor: pointer;
    }
    &-input {
        --form-check-border-color: var(--form-border-color);
        --form-check-bg: var(--form-bg);
        --form-check-size: 20px;
        --form-check-border-radius: 6px;
        --form-check-color-checked: var(--color-primary);
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        width: var(--form-check-size);
        height: var(--form-check-size);
        border: 1px solid var(--form-check-border-color);
        border-radius: var(--form-check-border-radius);
        background-color: var(--form-check-bg);
        transition: map.get($nexa-setting, transition-form);
        cursor: pointer;
        position: relative;
        background-repeat: no-repeat;
        background-position: center;
        background-size: 75%;
        outline: none;
        &:not(:disabled):hover {
            border-color: var(--form-border-color-hover);
        }
        &:focus,
        &:focus-visible {
            box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary) 20%, transparent);
            border-color: var(--form-check-color-checked);
        }
        &:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        &[type="checkbox"] {
            border-radius: 6px;
            &:checked {
                background-color: var(--form-check-color-checked);
                border-color: var(--form-check-color-checked);
                background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><polyline points='4 11 8 15 16 6' fill='none' stroke='%23fff' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/></svg>");
            }
        }
        &[type="radio"] {
            border-radius: 50%;
            &:checked {
                background-color: var(--form-check-color-checked);
                border-color: var(--form-check-color-checked);
                background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><circle cx='10' cy='10' r='5' fill='%23fff'/></svg>");
                background-position: center;
            }
        }
    }
}

// Switch
.form-switch {
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    .form-switch-input {
        --form-switch-width: 40px;
        --form-switch-height: 22px;
        --form-switch-bg: var(--form-swither-bg);
        --form-switch-border-radius: 50px;
        --form-switch-dot-width: 16px;
        --form-switch-dot-height: 16px;
        --form-switch-dot-bg: var(--form-swither-dot-bg);
        --form-switch-cheched-bg: var(--color-primary);
        --form-swith-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        position: relative;
        width: var(--form-switch-width);
        height: var(--form-switch-height);
        appearance: none;
        background-color: var(--form-switch-bg);
        border-radius: var(--form-switch-border-radius);
        outline: none;
        cursor: pointer;
        transition: background-color map.get($nexa-setting, transition-form), map.get($nexa-setting, transition-form);
        &::before {
            content: "";
            position: absolute;
            top: 3px;
            left: 3px;
            width: var(--form-switch-dot-width);
            height: var(--form-switch-dot-height);
            background-color: var(--form-switch-dot-bg);
            border-radius: 50%;
            transition: transform map.get($nexa-setting, transition-form), background-color map.get($nexa-setting, transition-form);
            box-shadow: var(--form-swith-shadow);
        }

        &:checked {
            background-color: var(--form-switch-cheched-bg);

            &::before {
                transform: translateX(18px);
                background-color: #fff;
            }
        }
        &:focus {
            box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary) 20%, transparent);
        }
        &:focus-visible {
            box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary) 20%, transparent);
        }

        &:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
    }

    .form-switch-label {
        font-size: 0.95rem;
        cursor: pointer;
        user-select: none;
    }
}
